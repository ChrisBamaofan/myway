kind: Deployment
apiVersion: apps/v1
metadata:
  name: python
  namespace: fate-1000
  uid: be042814-f65c-4968-aa78-cf3fc61f53a1
  resourceVersion: '146323352'
  generation: 2
  creationTimestamp: '2023-04-07T05:17:08Z'
  labels:
    app.kubernetes.io/managed-by: Helm
    chart: fate
    cluster: fate
    fateMoudle: python
    heritage: Helm
    name: fate-1000
    owner: kubefate
    partyId: '1000'
    release: fate-1000
  annotations:
    deployment.kubernetes.io/revision: '2'
    meta.helm.sh/release-name: fate-1000
    meta.helm.sh/release-namespace: fate-1000
  managedFields:
    - manager: kubefate
      operation: Update
      apiVersion: apps/v1
      time: '2023-04-07T05:17:08Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:meta.helm.sh/release-name': {}
            'f:meta.helm.sh/release-namespace': {}
          'f:labels':
            .: {}
            'f:app.kubernetes.io/managed-by': {}
            'f:chart': {}
            'f:cluster': {}
            'f:fateMoudle': {}
            'f:heritage': {}
            'f:name': {}
            'f:owner': {}
            'f:partyId': {}
            'f:release': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:chart': {}
                'f:cluster': {}
                'f:fateMoudle': {}
                'f:heritage': {}
                'f:name': {}
                'f:owner': {}
                'f:partyId': {}
                'f:release': {}
            'f:spec':
              'f:containers':
                'k:{"name":"fateboard"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/data/projects/fate/fateboard/conf/application.properties"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fateflow/logs"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                'k:{"name":"python"}':
                  .: {}
                  'f:command': {}
                  'f:env':
                    .: {}
                    'k:{"name":"FATE_FLOW_UPLOAD_MAX_BYTES"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"FATE_FLOW_UPLOAD_MAX_NUM"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"FATE_LOG_LEVEL"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"FATE_PROJECT_BASE"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"POD_IP"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:fieldRef':
                          .: {}
                          'f:apiVersion': {}
                          'f:fieldPath': {}
                    'k:{"name":"PYTHONPATH"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":9360,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                    'k:{"containerPort":9380,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/data/projects/fate/conf-tmp/"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/data/projects/fate/conf/pulsar_route_table"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/data/projects/fate/conf/rabbitmq_route_table"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/data/projects/fate/eggroll/conf/eggroll.properties"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fateflow/logs"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/jobs"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/model_local_cache"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/spark-2.4.1-bin-hadoop2.7/conf/spark-defaults-template.conf"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
              'f:dnsPolicy': {}
              'f:imagePullSecrets':
                .: {}
                'k:{"name":"myregistrykey"}':
                  .: {}
                  'f:name': {}
              'f:initContainers':
                .: {}
                'k:{"name":"ping-mysql"}':
                  .: {}
                  'f:command': {}
                  'f:env':
                    .: {}
                    'k:{"name":"MYSQL_DATABASE"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MYSQL_HOST"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MYSQL_PASSWORD"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MYSQL_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MYSQL_USER"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:serviceAccount': {}
              'f:serviceAccountName': {}
              'f:terminationGracePeriodSeconds': {}
              'f:volumes':
                .: {}
                'k:{"name":"eggroll-confs"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"fateboard-confs"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"pulsar-route-table"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"python-confs"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"python-data"}':
                  .: {}
                  'f:name': {}
                  'f:persistentVolumeClaim':
                    .: {}
                    'f:claimName': {}
                'k:{"name":"rabbitmq-route-table"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
    - manager: kubectl-patch
      operation: Update
      apiVersion: apps/v1
      time: '2023-04-07T05:17:32Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"python"}':
                  'f:volumeMounts':
                    'k:{"mountPath":"/data/projects/fate/fate/python/fate_client/pipeline/component/feature_transform.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/fate_client/pipeline/param/consts.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/fate_client/pipeline/param/feature_transform_param.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/fate_client/pipeline/param/scorecard_param.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/components/feature_transform.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/feature/feature_transform.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/param/feature_transform_param.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/param/scorecard_param.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/protobuf/generated/feature_transform_meta_pb2.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/protobuf/generated/feature_transform_param_pb2.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/protobuf/proto/feature-transform-meta.proto"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/protobuf/proto/feature-transform-param.proto"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/statistic/scorecard/score_transformer.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
                    'k:{"mountPath":"/data/projects/fate/fate/python/federatedml/util/consts.py"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:subPath': {}
              'f:volumes':
                'k:{"name":"feature-transform"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"scorecard"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"scorecard1"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"scorecard2"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-11-14T06:47:00Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
spec:
  replicas: 1
  selector:
    matchLabels:
      fateMoudle: python
      name: fate-1000
      partyId: '1000'
  template:
    metadata:
      creationTimestamp: null
      labels:
        chart: fate
        cluster: fate
        fateMoudle: python
        heritage: Helm
        name: fate-1000
        owner: kubefate
        partyId: '1000'
        release: fate-1000
    spec:
      volumes:
        - name: feature-transform
          configMap:
            name: feature-transform
            defaultMode: 420
        - name: scorecard
          configMap:
            name: scorecard
            defaultMode: 420
        - name: scorecard1
          configMap:
            name: scorecard
            defaultMode: 420
        - name: scorecard2
          configMap:
            name: scorecard
            defaultMode: 420
        - name: eggroll-confs
          configMap:
            name: eggroll-config
            defaultMode: 420
        - name: python-confs
          configMap:
            name: python-config
            defaultMode: 420
        - name: rabbitmq-route-table
          configMap:
            name: rabbitmq-route-table
            defaultMode: 420
        - name: pulsar-route-table
          configMap:
            name: pulsar-route-table
            defaultMode: 420
        - name: fateboard-confs
          configMap:
            name: fateboard-config
            defaultMode: 420
        - name: python-data
          persistentVolumeClaim:
            claimName: python-data
      initContainers:
        - name: ping-mysql
          image: 'registry.zet-fl.com/msmp/mysql:8'
          command:
            - /bin/bash
            - '-c'
            - |
              set -x
              function checkMySQL(){
                checkMySQLCount=0
                while true ; do
                  checkMySQLCount=$[checkMySQLCount+1]
                  echo "Waiting for mysql started. check count: $checkMySQLCount"
                  sleep 2

                  state=`mysqladmin ping -h ${MYSQL_HOST} --port=${MYSQL_PORT} -u${MYSQL_USER} -p${MYSQL_PASSWORD}| awk '{print $3}'`
                  if [ "$state" == "alive" ]; then
                    echo "mysql server has been already started."
                  break
                  fi
               done
              }
              echo "Waiting for mysql started..."
              checkMySQL
          env:
            - name: MYSQL_DATABASE
              value: eggroll_meta
            - name: MYSQL_USER
              value: fate
            - name: MYSQL_PASSWORD
              value: fate_dev
            - name: MYSQL_HOST
              value: mysql
            - name: MYSQL_PORT
              value: '3306'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      containers:
        - name: python
          image: 'registry.zet-fl.com/msmp/python-spark:1.7.2-release'
          command:
            - /bin/bash
            - '-c'
            - >
              set -x

              mkdir -p /data/projects/fate/conf/

              cp /data/projects/fate/conf-tmp/transfer_conf.yaml
              /data/projects/fate/conf/transfer_conf.yaml

              cp /data/projects/fate/conf-tmp/service_conf.yaml
              /data/projects/fate/conf/service_conf.yaml

              cp /data/projects/fate/conf-tmp/component_registry.json
              /data/projects/fate/conf/component_registry.json

              cp /data/projects/fate/conf-tmp/job_default_config.yaml
              /data/projects/fate/conf/job_default_config.yaml

              # fix fateflow conf must use IP

              sed -i "s/host: fateflow/host: ${POD_IP}/g"
              /data/projects/fate/conf/service_conf.yaml


              cp
              /data/projects/spark-2.4.1-bin-hadoop2.7/conf/spark-defaults-template.conf
              /data/projects/spark-2.4.1-bin-hadoop2.7/conf/spark-defaults.conf

              sed -i "s/fateflow/${POD_IP}/g"
              /data/projects/spark-2.4.1-bin-hadoop2.7/conf/spark-defaults.conf


              sleep 5 && python fateflow/python/fate_flow/fate_flow_server.py
          ports:
            - containerPort: 9360
              protocol: TCP
            - containerPort: 9380
              protocol: TCP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: FATE_LOG_LEVEL
              value: DEBUG
            - name: PYTHONPATH
              value: >-
                $PYTHONPATH:/data/projects/fate/fate/python:/data/projects/fate/eggroll/python:/data/projects/fate/fateflow/python:/data/projects/fate/fate/python/fate_client
            - name: FATE_PROJECT_BASE
              value: /data/projects/fate
            - name: FATE_FLOW_UPLOAD_MAX_NUM
              value: '1000000'
            - name: FATE_FLOW_UPLOAD_MAX_BYTES
              value: '104868093952'
          resources: {}
          volumeMounts:
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/fate_client/pipeline/component/feature_transform.py
              subPath: fate-client-pipeline-component-feature-transform.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/fate_client/pipeline/param/feature_transform_param.py
              subPath: fate-client-pipeline-param-feature-transform-param.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/fate_client/pipeline/param/consts.py
              subPath: fate-client-pipeline-param-consts.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/components/feature_transform.py
              subPath: federatedml-components-feature-transform.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/feature/feature_transform.py
              subPath: federatedml-feature-feature-transform.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/param/feature_transform_param.py
              subPath: federatedml-param-feature-transform-param.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/protobuf/generated/feature_transform_meta_pb2.py
              subPath: federatedml-protobuf-generated-feature-transform-meta-pb2.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/protobuf/generated/feature_transform_param_pb2.py
              subPath: federatedml-protobuf-generated-feature-transform-param-pb2.py
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/protobuf/proto/feature-transform-meta.proto
              subPath: federatedml-protobuf-proto-feature-transform-meta.proto
            - name: feature-transform
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/protobuf/proto/feature-transform-param.proto
              subPath: federatedml-protobuf-proto-feature-transform-param.proto
            - name: feature-transform
              mountPath: /data/projects/fate/fate/python/federatedml/util/consts.py
              subPath: federatedml-util-consts.py
            - name: scorecard
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/statistic/scorecard/score_transformer.py
              subPath: score_transformer.py
            - name: scorecard1
              mountPath: >-
                /data/projects/fate/fate/python/federatedml/param/scorecard_param.py
              subPath: scorecard_param.py1
            - name: scorecard2
              mountPath: >-
                /data/projects/fate/fate/python/fate_client/pipeline/param/scorecard_param.py
              subPath: scorecard_param.py2
            - name: eggroll-confs
              mountPath: /data/projects/fate/eggroll/conf/eggroll.properties
              subPath: eggroll.properties
            - name: python-data
              mountPath: /data/projects/fate/fateflow/logs
              subPath: logs
            - name: python-confs
              mountPath: /data/projects/fate/conf-tmp/
            - name: python-confs
              mountPath: >-
                /data/projects/spark-2.4.1-bin-hadoop2.7/conf/spark-defaults-template.conf
              subPath: spark-defaults.conf
            - name: rabbitmq-route-table
              mountPath: /data/projects/fate/conf/rabbitmq_route_table
            - name: pulsar-route-table
              mountPath: /data/projects/fate/conf/pulsar_route_table
            - name: python-data
              mountPath: /data/projects/fate/jobs
              subPath: jobs
            - name: python-data
              mountPath: /data/projects/fate/model_local_cache
              subPath: model-local-cache
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: fateboard
          image: 'registry.zet-fl.com/msmp/fateboard:1.7.2-release'
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: fateboard-confs
              mountPath: /data/projects/fate/fateboard/conf/application.properties
              subPath: application.properties
            - name: python-data
              mountPath: /data/projects/fate/fateflow/logs
              subPath: logs
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      imagePullSecrets:
        - name: myregistrykey
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-04-07T05:18:03Z'
      lastTransitionTime: '2023-04-07T05:17:08Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "python-64f779b57" has successfully progressed.
    - type: Available
      status: 'True'
      lastUpdateTime: '2023-11-14T06:47:00Z'
      lastTransitionTime: '2023-11-14T06:47:00Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
